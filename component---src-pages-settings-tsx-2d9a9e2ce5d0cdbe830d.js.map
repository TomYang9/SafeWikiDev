{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","webpack:///./src/styles/colors.ts","webpack:///./src/pages/settings.tsx"],"names":["props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","disabled","undefined","ListItem","button","dense","root","gutters","withStyles","theme","typography","body1","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","colors","color","desc","useConfig","createPersistedState","SettingsPage","location","defaultSettings","settings","setSettings","updateSetting","newSettings","finalSettings","window","ColorButton","background","makeStyles","palette","getContrastText","default","margin","padding","height","border","borderColor","divider","darken","label","lineHeight","textAlign","justifyContent","position","bottom","useStyles","Grid","item","Button","onClick","navColor","Layout","noMeta","noEdit","noToC","title","container","direction","spacing","FormControl","InputLabel","Select","value","darkMode","type","onChange","e","target","map","key"],"mappings":"0OAmCI,EAAwB,cAAiB,SAAkBA,EAAOC,GACpE,IAaIC,EAbAC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBA,OAAiC,IAArBD,EAA8B,KAAOA,EACjDE,EAAwBP,EAAMQ,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAkBT,EAAMS,gBACxBC,EAAcV,EAAMW,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7CE,EAAWZ,EAAMY,SACjBC,EAAeb,EAAME,SACrBY,EAAQ,YAAyBd,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,kBAAmB,OAAQ,WAAY,aAQ3I,OAJKA,EAAMe,WACTb,OAA4Bc,IAAjBH,EAA6BA,GAAgB,GAGtC,gBAAoBI,EAAA,EAAU,YAAS,CACzDC,QAAQ,EACRP,KAAMA,EACNT,SAAUA,EACVI,UAAWA,EACXM,SAAUA,EACVJ,eAAgBA,EAChBL,QAAS,YAAS,CAChBgB,MAAOhB,EAAQgB,OACdV,GACHL,UAAW,YAAKD,EAAQiB,KAAMhB,EAAWQ,GAAYT,EAAQS,UAAWJ,GAAkBL,EAAQkB,SAClGpB,IAAKA,GACJa,OAGU,SAAAQ,EAAA,IA/DK,SAAgBC,GAClC,MAAO,CAELH,KAAM,YAAS,GAAIG,EAAMC,WAAWC,MAAO,YAAgB,CACzDC,UAAW,GACXC,WAAY,EACZC,cAAe,EACfC,UAAW,aACXC,MAAO,OACPC,SAAU,SACVC,WAAY,UACXT,EAAMU,YAAYC,GAAG,MAAO,CAC7BR,UAAW,UAKbL,QAAS,GAGTT,SAAU,GAGVO,MAAO,YAAS,GAAII,EAAMC,WAAWW,MAAO,CAC1CT,UAAW,YAuCiB,CAChCU,KAAM,eADO,CAEZ,G,wEC/CYC,EAzBwC,CACrD,CAAEC,MAAO,OAAQC,KAAM,QACvB,CAAED,MAAO,OAAQC,KAAM,mBACvB,CAAED,MAAO,OAAQC,KAAM,YACvB,CAAED,MAAO,UAAWC,KAAM,sBAC1B,CAAED,MAAO,OAAQC,KAAM,oBACvB,CAAED,MAAO,UAAWC,KAAM,OAC1B,CAAED,MAAO,UAAWC,KAAM,UAC1B,CAAED,MAAO,UAAWC,KAAM,eAC1B,CAAED,MAAO,UAAWC,KAAM,UAC1B,CAAED,MAAO,UAAWC,KAAM,QAC1B,CAAED,MAAO,UAAWC,KAAM,cAC1B,CAAED,MAAO,UAAWC,KAAM,QAC1B,CAAED,MAAO,UAAWC,KAAM,QAC1B,CAAED,MAAO,UAAWC,KAAM,SAC1B,CAAED,MAAO,UAAWC,KAAM,eAC1B,CAAED,MAAO,UAAWC,KAAM,QAC1B,CAAED,MAAO,UAAWC,KAAM,UAC1B,CAAED,MAAO,UAAWC,KAAM,SAC1B,CAAED,MAAO,UAAWC,KAAM,UAC1B,CAAED,MAAO,UAAWC,KAAM,eAC1B,CAAED,MAAO,UAAWC,KAAM,SAC1B,CAAED,MAAO,UAAWC,KAAM,QAC1B,CAAED,MAAO,UAAWC,KAAM,c,ykBCT5B,IAAMC,EAAYC,YAAqB,YAqGxBC,UAjGmC,SAAC1C,GAA6B,IACtE2C,EAAa3C,EAAb2C,SADsE,EAE9CH,EAAUI,KAAnCC,EAFuE,KAE7DC,EAF6D,KAGxEC,EAAgB,SAACC,GACrB,IAAMC,EAAgB,EAAH,OAAQL,KAAoBC,GAAaG,GAC5DF,EAAYG,QAEDjC,IAAXkC,QAAwBA,OAAM,cAAkBD,IAG5CE,EAAyC,SAACnD,GAC9C,IAAMoD,EAA6B,SAAhBpD,EAAMsC,WACrBtB,EACAhB,EAAMsC,MA0BJnC,EAxBYkD,aAAW,SAAC9B,GAAD,MAAY,CACvCH,KAAM,CACJgC,aACAd,MAAOf,EAAM+B,QAAQC,gBAAgBH,GAAc7B,EAAM+B,QAAQF,WAAWI,SAC5EC,OAAQ,kBACRC,QAAS,EACT5B,MAAO,MACP6B,OAAQ,MACRC,OAAQ,aACRC,YAAatC,EAAM+B,QAAQQ,QAC3B,UAAW,CACTV,WAAYA,EAAaW,iBAAOX,EAAY,SAAOpC,IAGvDgD,MAAO,CACLP,OAAQ,SACRQ,WAAY,QACZC,UAAW,OACXC,eAAgB,OAChBC,SAAU,WACVC,OAAQ,WAIIC,GAChB,OACE,wBAACC,EAAA,EAAD,CAAMC,MAAI,GACR,wBAACC,EAAA,EAAD,CACEtE,QAASA,EACTuE,QAAS,WACP3B,EAAc,CACZxB,MAAO,CACLoD,SAAU3E,EAAMsC,WAKpBtC,EAAMuC,QAMhB,OACE,wBAACqC,EAAA,EAAD,CACEjC,SAAUA,EACVkC,OAAO,OACPC,OAAO,OACPC,MAAM,OACNC,MAAM,MAEN,wBAACT,EAAA,EAAD,CAAMU,WAAS,EAACC,UAAU,SAASC,QAAS,GAC1C,wBAACZ,EAAA,EAAD,CAAMC,MAAI,GACR,wBAACY,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,aACA,wBAACC,EAAA,EAAD,CACEC,MAAO1C,EAAS2C,SAASC,KACzBC,SAAU,SAACC,GACT5C,EAAc,CACZyC,SAAU,CACRC,KAAME,EAAEC,OAAOL,WAKrB,wBAAC,EAAD,CAAUA,MAAM,mBAAhB,QACA,wBAAC,EAAD,CAAUA,MAAM,aAAhB,QACA,wBAAC,EAAD,CAAUA,MAAM,cAAhB,WAIN,wBAAChB,EAAA,EAAD,CAAMC,MAAI,GAAV,QAEE,wBAACD,EAAA,EAAD,CAAMU,WAAS,GACZ5C,EAAOwD,KAAI,SAAA7F,GAAK,OAAK,wBAACmD,EAAD,iBAAiBnD,EAAjB,CAAwB8F,IAAK9F,EAAMsC","file":"component---src-pages-settings-tsx-2d9a9e2ce5d0cdbe830d.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","const colors: Array<{ desc: string, color: string }> = [\r\n  { color: 'auto', desc: 'auto' },\r\n  { color: '#FFF', desc: 'classical white' },\r\n  { color: '#A00', desc: 'Lily Red' },\r\n  { color: '#e91e63', desc: 'Margatroid Magenta' },\r\n  { color: '#222', desc: 'Breathy Darkness' },\r\n  { color: '#ef5350', desc: 'Red' },\r\n  { color: '#ab47bc', desc: 'Purple' },\r\n  { color: '#7e57c2', desc: 'Deep Purple' },\r\n  { color: '#3f51b5', desc: 'Indigo' },\r\n  { color: '#2196f3', desc: 'Blue' },\r\n  { color: '#03a9f4', desc: 'Light Blue' },\r\n  { color: '#00bcd4', desc: 'Cyan' },\r\n  { color: '#009688', desc: 'Teal' },\r\n  { color: '#4caf50', desc: 'Green' },\r\n  { color: '#7cb342', desc: 'Light Green' },\r\n  { color: '#c0ca33', desc: 'Lime' },\r\n  { color: '#f9a825', desc: 'Yellow' },\r\n  { color: '#ffa000', desc: 'Amber' },\r\n  { color: '#fb8c00', desc: 'Orange' },\r\n  { color: '#ff7043', desc: 'Deep Orange' },\r\n  { color: '#795548', desc: 'Brown' },\r\n  { color: '#757575', desc: 'Grey' },\r\n  { color: '#546e7a', desc: 'Blue Grey' },\r\n]\r\nexport default colors\r\n","import Grid from '@material-ui/core/Grid'\nimport React from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core'\nimport { darken } from '@material-ui/core/styles/colorManipulator'\nimport Layout from '../components/Layout'\nimport defaultSettings from '../lib/defaultSettings'\nimport colors from '../styles/colors'\n\nconst useConfig = createPersistedState('settings')\ntype SettingsPageProps = {\n  location: string\n}\nconst SettingsPage: React.FC<SettingsPageProps> = (props: SettingsPageProps) => {\n  const { location } = props\n  const [settings, setSettings] = useConfig(defaultSettings)\n  const updateSetting = (newSettings): void => {\n    const finalSettings = { ...defaultSettings, ...settings, ...newSettings }\n    setSettings(finalSettings)\n    // eslint-disable-next-line dot-notation\n    window !== undefined && window['onthemechange'](finalSettings)\n  }\n  type ColorButtonProp = { color: string, desc: string }\n  const ColorButton: React.FC<ColorButtonProp> = (props: ColorButtonProp) => {\n    const background = props.color === 'auto'\n      ? undefined // inherit settings\n      : props.color\n\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        background,\n        color: theme.palette.getContrastText(background || theme.palette.background.default),\n        margin: '1em 1.2em 1em 0',\n        padding: 0,\n        width: '8em',\n        height: '8em',\n        border: '.1em solid',\n        borderColor: theme.palette.divider,\n        '&:hover': {\n          background: background ? darken(background, 0.2) : undefined,\n        },\n      },\n      label: {\n        margin: '0 .4em',\n        lineHeight: '1.2em',\n        textAlign: 'left',\n        justifyContent: 'left',\n        position: 'absolute',\n        bottom: '.2em',\n      },\n    }))\n\n    const classes = useStyles()\n    return (\n      <Grid item>\n        <Button\n          classes={classes}\n          onClick={() => {\n            updateSetting({\n              theme: {\n                navColor: props.color,\n              },\n            })\n          }}\n        >\n          { props.desc }\n        </Button>\n      </Grid>\n    )\n  }\n\n  return (\n    <Layout\n      location={location}\n      noMeta=\"true\"\n      noEdit=\"true\"\n      noToC=\"true\"\n      title=\"设置\"\n    >\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid item>\n          <FormControl>\n            <InputLabel>暗色模式</InputLabel>\n            <Select\n              value={settings.darkMode.type}\n              onChange={(e) => {\n                updateSetting({\n                  darkMode: {\n                    type: e.target.value,\n                  },\n                })\n              }}\n            >\n              <MenuItem value=\"user-preference\">跟随系统</MenuItem>\n              <MenuItem value=\"always-on\">总是打开</MenuItem>\n              <MenuItem value=\"always-off\">总是关闭</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          导航栏颜色\n          <Grid container>\n            {colors.map(props => (<ColorButton {...props} key={props.color}/>))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default SettingsPage\n"],"sourceRoot":""}